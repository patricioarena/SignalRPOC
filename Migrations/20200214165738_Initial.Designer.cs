// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspnet_core_api.Data;

namespace aspnet_core_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200214165738_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("aspnet_core_api.Models.ConAdicioneles", b =>
                {
                    b.Property<Guid>("ConAdicionalesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConAdicionalesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("Descripcion")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("Titulo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ConAdicionalesID");

                    b.HasIndex("PersonaID");

                    b.ToTable("ConocimientosAdicionales","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.ConTecnicos", b =>
                {
                    b.Property<Guid>("ConTecnicosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConTecnicosID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conocimiento")
                        .IsRequired()
                        .HasColumnName("Conocimiento")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Nivel")
                        .HasColumnName("Nivel")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Titulo")
                        .HasColumnName("Titulo")
                        .HasColumnType("int");

                    b.HasKey("ConTecnicosID");

                    b.HasIndex("PersonaID");

                    b.ToTable("ConocimientosTecnicos","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.DatosPersonales", b =>
                {
                    b.Property<Guid>("PersonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("Apellido")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CEL")
                        .HasColumnName("CEL")
                        .HasColumnType("int");

                    b.Property<Guid>("DomicilioID")
                        .HasColumnName("DomicilioID")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaDeNac")
                        .HasColumnName("FechaDeNac")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TEL")
                        .HasColumnName("TEL")
                        .HasColumnType("int");

                    b.HasKey("PersonaID");

                    b.HasIndex("DomicilioID")
                        .IsUnique();

                    b.ToTable("DatosPersonales","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.Domicilio", b =>
                {
                    b.Property<Guid>("DomicilioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DomicilioID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnName("Calle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CodPostal")
                        .HasColumnName("CodPostal")
                        .HasColumnType("int");

                    b.Property<string>("Depto")
                        .HasColumnName("Depto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnName("Localidad")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Numero")
                        .HasColumnName("Numero")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnName("Pais")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Partido")
                        .IsRequired()
                        .HasColumnName("Partido")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Piso")
                        .HasColumnName("Piso")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnName("Provincia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DomicilioID");

                    b.ToTable("Domicilio","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.Estudio", b =>
                {
                    b.Property<Guid>("EstudioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EstudioID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActExtra")
                        .IsRequired()
                        .HasColumnName("ActExtra")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("Descripcion")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasColumnName("Disciplina")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Establecimiento")
                        .IsRequired()
                        .HasColumnName("Establecimiento")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaDeFin")
                        .HasColumnName("FechaDeFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeInicio")
                        .HasColumnName("FechaDeInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("Titulo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("EstudioID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Estudio","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.Experiencia", b =>
                {
                    b.Property<Guid>("ExperienciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ExperienciaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnName("Cargo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Descripcion")
                        .HasColumnName("Descripcion")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnName("Empresa")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaDeFin")
                        .HasColumnName("FechaDeFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeInicio")
                        .HasColumnName("FechaDeInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoDeEmpleo")
                        .IsRequired()
                        .HasColumnName("TipoDeEmpleo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ubicacion")
                        .HasColumnName("Ubicacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ExperienciaID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Experiencia","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.Lenguaje", b =>
                {
                    b.Property<Guid>("IdiomasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdiomasID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasColumnName("Idioma")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("NivelEscrito")
                        .HasColumnName("NivelEscrito")
                        .HasColumnType("int");

                    b.Property<int>("NivelLectura")
                        .HasColumnName("NivelLectura")
                        .HasColumnType("int");

                    b.Property<int>("NivelOral")
                        .HasColumnName("NivelOral")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdiomasID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Idiomas","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.ConAdicioneles", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "datosPersonales")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspnet_core_api.Models.ConTecnicos", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "datosPersonales")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspnet_core_api.Models.DatosPersonales", b =>
                {
                    b.HasOne("aspnet_core_api.Models.Domicilio", "Domicilio")
                        .WithOne("datosPersonales")
                        .HasForeignKey("aspnet_core_api.Models.DatosPersonales", "DomicilioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspnet_core_api.Models.Estudio", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "datosPersonales")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspnet_core_api.Models.Experiencia", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "datosPersonales")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspnet_core_api.Models.Lenguaje", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "datosPersonales")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
