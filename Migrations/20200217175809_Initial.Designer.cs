// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspnet_core_api.Data;

namespace aspnet_core_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200217175809_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("aspnet_core_api.Models.ConAdicioneles", b =>
                {
                    b.Property<Guid>("ConAdicionalesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConAdicionalesID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("Descripcion")
                        .HasColumnType("TEXT")
                        .HasMaxLength(254);

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("Titulo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.HasKey("ConAdicionalesID");

                    b.HasIndex("PersonaID");

                    b.ToTable("ConocimientosAdicionales","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.ConTecnicos", b =>
                {
                    b.Property<Guid>("ConTecnicosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConTecnicosID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Conocimiento")
                        .IsRequired()
                        .HasColumnName("Conocimiento")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Nivel")
                        .HasColumnName("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Titulo")
                        .HasColumnName("Titulo")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConTecnicosID");

                    b.HasIndex("PersonaID");

                    b.ToTable("ConocimientosTecnicos","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.DatosPersonales", b =>
                {
                    b.Property<Guid>("PersonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("Apellido")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("CEL")
                        .IsRequired()
                        .HasColumnName("CEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaDeNac")
                        .HasColumnName("FechaDeNac")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("TEL")
                        .IsRequired()
                        .HasColumnName("TEL")
                        .HasColumnType("TEXT");

                    b.HasKey("PersonaID");

                    b.ToTable("DatosPersonales","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.Domicilio", b =>
                {
                    b.Property<Guid>("DomicilioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DomicilioID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnName("Calle")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("CodPostal")
                        .HasColumnName("CodPostal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Depto")
                        .HasColumnName("Depto")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnName("Localidad")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Numero")
                        .HasColumnName("Numero")
                        .HasColumnType("INTEGER")
                        .HasMaxLength(50);

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnName("Pais")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<string>("Partido")
                        .IsRequired()
                        .HasColumnName("Partido")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Piso")
                        .HasColumnName("Piso")
                        .HasColumnType("INTEGER")
                        .HasMaxLength(50);

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnName("Provincia")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("DomicilioID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Domicilio","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.Estudio", b =>
                {
                    b.Property<Guid>("EstudioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EstudioID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActExtra")
                        .IsRequired()
                        .HasColumnName("ActExtra")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("Descripcion")
                        .HasColumnType("TEXT")
                        .HasMaxLength(254);

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasColumnName("Disciplina")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Establecimiento")
                        .IsRequired()
                        .HasColumnName("Establecimiento")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaDeFin")
                        .HasColumnName("FechaDeFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaDeInicio")
                        .HasColumnName("FechaDeInicio")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("Titulo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("EstudioID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Estudio","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.Experiencia", b =>
                {
                    b.Property<Guid>("ExperienciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ExperienciaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnName("Cargo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Descripcion")
                        .HasColumnName("Descripcion")
                        .HasColumnType("TEXT")
                        .HasMaxLength(254);

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnName("Empresa")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaDeFin")
                        .HasColumnName("FechaDeFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaDeInicio")
                        .HasColumnName("FechaDeInicio")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoDeEmpleo")
                        .IsRequired()
                        .HasColumnName("TipoDeEmpleo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Ubicacion")
                        .HasColumnName("Ubicacion")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("ExperienciaID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Experiencia","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.Lenguaje", b =>
                {
                    b.Property<Guid>("IdiomasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdiomasID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasColumnName("Idioma")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<int>("NivelEscrito")
                        .HasColumnName("NivelEscrito")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NivelLectura")
                        .HasColumnName("NivelLectura")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NivelOral")
                        .HasColumnName("NivelOral")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("TEXT");

                    b.HasKey("IdiomasID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Idiomas","dbo");
                });

            modelBuilder.Entity("aspnet_core_api.Models.ConAdicioneles", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "ConocimientosAdicionales")
                        .WithMany("ConocimientosAdicionales")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspnet_core_api.Models.ConTecnicos", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "ConocimientosTecnicos")
                        .WithMany("ConocimientosTecnicos")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspnet_core_api.Models.Domicilio", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "Domicilios")
                        .WithMany("Domicilios")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspnet_core_api.Models.Estudio", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "Estudios")
                        .WithMany("Estudios")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspnet_core_api.Models.Experiencia", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "Experiencias")
                        .WithMany("Experiencias")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspnet_core_api.Models.Lenguaje", b =>
                {
                    b.HasOne("aspnet_core_api.Models.DatosPersonales", "Idiomas")
                        .WithMany("Idiomas")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
