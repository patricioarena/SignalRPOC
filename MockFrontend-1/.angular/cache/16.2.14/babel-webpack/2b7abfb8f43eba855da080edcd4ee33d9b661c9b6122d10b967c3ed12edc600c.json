{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TooltipAdjustDirective {\n  constructor(element, renderer) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n  ngAfterViewInit() {\n    console.log(\"ENTRO EN NGAFTERVIEWINIT\");\n    if (this.appTooltipAdjust) {\n      this.adjustTooltipPosition();\n      this.setCardMaxWidth();\n      this.setCardContentWidth();\n    }\n  }\n  onWindowResize() {\n    console.log(\"ONWINDOWRESIZE\");\n    this.adjustTooltipPosition();\n    this.setCardMaxWidth();\n    this.setCardContentWidth();\n  }\n  adjustTooltipPosition() {\n    const element = this.element.nativeElement;\n    const rect = element.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    // Obtener el ancho y alto del elemento\n    const elementWidth = element.offsetWidth;\n    const elementHeight = element.offsetHeight;\n    // Ajustar la posición si la tarjeta se sale del margen derecho\n    if (rect.right > viewportWidth) {\n      const overflowRight = rect.right - viewportWidth;\n      // Ajustar el valor de 'left' para que el borde derecho esté dentro del viewport\n      const newLeft = Math.max(0, rect.left - overflowRight);\n      this.renderer.setStyle(element, 'left', `${newLeft}px`);\n    }\n    // Ajustar la posición si la tarjeta se sale del margen izquierdo\n    if (rect.left < 0) {\n      const overflowLeft = Math.abs(rect.left);\n      // Ajustar el valor de 'left' para que el borde izquierdo esté dentro del viewport\n      const newLeft = Math.min(0, rect.left + overflowLeft);\n      this.renderer.setStyle(element, 'left', `${newLeft}px`);\n    }\n  }\n  setCardMaxWidth() {\n    const element = this.element.nativeElement;\n    this.renderer.setStyle(element, 'max-width', '300px');\n  }\n  setCardContentWidth() {\n    const element = this.element.nativeElement;\n    const textElements = element.querySelectorAll('.viewer-card-body, .viewer-card-body *');\n    // Ajustar el ancho máximo del contenedor del texto\n    this.renderer.setStyle(element.querySelector('.viewer-card-body'), 'max-width', '150px');\n    textElements.forEach(textElement => {\n      // Ajustar el ancho máximo de los elementos de texto\n      this.renderer.setStyle(textElement, 'max-width', '150px');\n      // Ajustar el tamaño de la fuente del texto (puedes personalizar este valor)\n      this.renderer.setStyle(textElement, 'font-size', '14px');\n    });\n  }\n  static #_ = this.ɵfac = function TooltipAdjustDirective_Factory(t) {\n    return new (t || TooltipAdjustDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TooltipAdjustDirective,\n    selectors: [[\"\", \"appTooltipAdjust\", \"\"]],\n    hostBindings: function TooltipAdjustDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function TooltipAdjustDirective_resize_HostBindingHandler() {\n          return ctx.onWindowResize();\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      appTooltipAdjust: \"appTooltipAdjust\"\n    }\n  });\n}","map":{"version":3,"names":["TooltipAdjustDirective","constructor","element","renderer","ngAfterViewInit","console","log","appTooltipAdjust","adjustTooltipPosition","setCardMaxWidth","setCardContentWidth","onWindowResize","nativeElement","rect","getBoundingClientRect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","elementWidth","offsetWidth","elementHeight","offsetHeight","right","overflowRight","newLeft","Math","max","left","setStyle","overflowLeft","abs","min","textElements","querySelectorAll","querySelector","forEach","textElement","_","i0","ɵɵdirectiveInject","ElementRef","Renderer2","_2","selectors","hostBindings","TooltipAdjustDirective_HostBindings","rf","ctx","ɵɵresolveWindow"],"sources":["C:\\Users\\Ayelen\\Desktop\\SignalRPOC\\MockFrontend-1\\src\\app\\directive\\tooltip-adjust.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2, HostListener, Input, AfterViewInit } from '@angular/core';\n\n@Directive({\n  selector: '[appTooltipAdjust]'\n})\nexport class TooltipAdjustDirective implements AfterViewInit{\n  @Input() appTooltipAdjust: boolean;\n\n  constructor(private element: ElementRef, private renderer: Renderer2) { }\n\n  ngAfterViewInit(): void {\n    console.log(\"ENTRO EN NGAFTERVIEWINIT\")\n    if(this.appTooltipAdjust){\n      this.adjustTooltipPosition();\n      this.setCardMaxWidth();\n      this.setCardContentWidth();\n    }\n  }\n\n  @HostListener('window:resize')\n  onWindowResize(){\n    console.log(\"ONWINDOWRESIZE\")\n    this.adjustTooltipPosition();\n    this.setCardMaxWidth();\n    this.setCardContentWidth();\n  }\n\n  adjustTooltipPosition() {\n    const element = this.element.nativeElement;\n    const rect = element.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n     // Obtener el ancho y alto del elemento\n    const elementWidth = element.offsetWidth;\n    const elementHeight = element.offsetHeight;\n\n    // Ajustar la posición si la tarjeta se sale del margen derecho\n    if (rect.right > viewportWidth) {\n      const overflowRight = rect.right - viewportWidth;\n      // Ajustar el valor de 'left' para que el borde derecho esté dentro del viewport\n      const newLeft = Math.max(0, rect.left - overflowRight);\n      this.renderer.setStyle(element, 'left', `${newLeft}px`);\n    }\n\n    // Ajustar la posición si la tarjeta se sale del margen izquierdo\n    if (rect.left < 0) {\n      const overflowLeft = Math.abs(rect.left);\n      // Ajustar el valor de 'left' para que el borde izquierdo esté dentro del viewport\n      const newLeft = Math.min(0, rect.left + overflowLeft);\n      this.renderer.setStyle(element, 'left', `${newLeft}px`);\n    }\n  }\n\n\n  private setCardMaxWidth(): void {\n    const element = this.element.nativeElement;\n    this.renderer.setStyle(element, 'max-width', '300px');\n  }\n\n  private setCardContentWidth(): void {\n    const element = this.element.nativeElement;\n    const textElements = element.querySelectorAll('.viewer-card-body, .viewer-card-body *');\n    // Ajustar el ancho máximo del contenedor del texto\n    this.renderer.setStyle(element.querySelector('.viewer-card-body'), 'max-width', '150px');\n    textElements.forEach((textElement: HTMLElement) => {\n      // Ajustar el ancho máximo de los elementos de texto\n      this.renderer.setStyle(textElement, 'max-width', '150px');\n\n      // Ajustar el tamaño de la fuente del texto (puedes personalizar este valor)\n      this.renderer.setStyle(textElement, 'font-size', '14px');\n    });\n  }\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}