{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TooltipAdjustDirective {\n  constructor(element, renderer) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n  onWindowResize() {\n    if (this.appTooltipAdjust) {\n      this.adjustTooltipPosition();\n    }\n  }\n  adjustTooltipPosition() {\n    if (!this.appTooltipAdjust) return;\n    const element = this.element.nativeElement;\n    const rect = element.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    // Ajustar la posición si la tarjeta se sale del margen derecho\n    if (rect.right > viewportWidth) {\n      const overflowRight = rect.right - viewportWidth;\n      this.renderer.setStyle(element, 'left', `-${overflowRight}px`);\n    }\n    // Ajustar la posición si la tarjeta se sale del margen izquierdo\n    if (rect.left < 0) {\n      const overflowLeft = Math.abs(rect.left);\n      this.renderer.setStyle(element, 'left', `${overflowLeft}px`);\n    }\n    // Ajustar la posición si la tarjeta se sale del margen inferior\n    if (rect.bottom > viewportHeight) {\n      const overflowBottom = rect.bottom - viewportHeight;\n      this.renderer.setStyle(element, 'top', `-${overflowBottom}px`);\n    }\n  }\n  static #_ = this.ɵfac = function TooltipAdjustDirective_Factory(t) {\n    return new (t || TooltipAdjustDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TooltipAdjustDirective,\n    selectors: [[\"\", \"appTooltipAdjust\", \"\"]],\n    hostBindings: function TooltipAdjustDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function TooltipAdjustDirective_resize_HostBindingHandler() {\n          return ctx.onWindowResize();\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      appTooltipAdjust: \"appTooltipAdjust\"\n    }\n  });\n}","map":{"version":3,"names":["TooltipAdjustDirective","constructor","element","renderer","onWindowResize","appTooltipAdjust","adjustTooltipPosition","nativeElement","rect","getBoundingClientRect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","right","overflowRight","setStyle","left","overflowLeft","Math","abs","bottom","overflowBottom","_","i0","ɵɵdirectiveInject","ElementRef","Renderer2","_2","selectors","hostBindings","TooltipAdjustDirective_HostBindings","rf","ctx","ɵɵresolveWindow"],"sources":["C:\\Users\\Ayelen\\Desktop\\SignalRPOC\\MockFrontend-1\\src\\app\\directive\\tooltip-adjust.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appTooltipAdjust]'\n})\nexport class TooltipAdjustDirective {\n  @Input() appTooltipAdjust: boolean;\n\n  constructor(private element: ElementRef, private renderer: Renderer2) { }\n\n  @HostListener('window:resize')\n  onWindowResize() {\n    if (this.appTooltipAdjust) {\n      this.adjustTooltipPosition();\n    }\n  }\n\n  private adjustTooltipPosition() {\n    if (!this.appTooltipAdjust) return;\n\n    const element = this.element.nativeElement;\n    const rect = element.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    // Ajustar la posición si la tarjeta se sale del margen derecho\n    if (rect.right > viewportWidth) {\n      const overflowRight = rect.right - viewportWidth;\n      this.renderer.setStyle(element, 'left', `-${overflowRight}px`);\n    }\n\n    // Ajustar la posición si la tarjeta se sale del margen izquierdo\n    if (rect.left < 0) {\n      const overflowLeft = Math.abs(rect.left);\n      this.renderer.setStyle(element, 'left', `${overflowLeft}px`);\n    }\n\n    // Ajustar la posición si la tarjeta se sale del margen inferior\n    if (rect.bottom > viewportHeight) {\n      const overflowBottom = rect.bottom - viewportHeight;\n      this.renderer.setStyle(element, 'top', `-${overflowBottom}px`);\n    }\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,sBAAsB;EAGjCC,YAAoBC,OAAmB,EAAUC,QAAmB;IAAhD,KAAAD,OAAO,GAAPA,OAAO;IAAsB,KAAAC,QAAQ,GAARA,QAAQ;EAAe;EAGxEC,cAAcA,CAAA;IACZ,IAAI,IAAI,CAACC,gBAAgB,EAAE;MACzB,IAAI,CAACC,qBAAqB,EAAE;;EAEhC;EAEQA,qBAAqBA,CAAA;IAC3B,IAAI,CAAC,IAAI,CAACD,gBAAgB,EAAE;IAE5B,MAAMH,OAAO,GAAG,IAAI,CAACA,OAAO,CAACK,aAAa;IAC1C,MAAMC,IAAI,GAAGN,OAAO,CAACO,qBAAqB,EAAE;IAC5C,MAAMC,aAAa,GAAGC,MAAM,CAACC,UAAU;IACvC,MAAMC,cAAc,GAAGF,MAAM,CAACG,WAAW;IAEzC;IACA,IAAIN,IAAI,CAACO,KAAK,GAAGL,aAAa,EAAE;MAC9B,MAAMM,aAAa,GAAGR,IAAI,CAACO,KAAK,GAAGL,aAAa;MAChD,IAAI,CAACP,QAAQ,CAACc,QAAQ,CAACf,OAAO,EAAE,MAAM,EAAE,IAAIc,aAAa,IAAI,CAAC;;IAGhE;IACA,IAAIR,IAAI,CAACU,IAAI,GAAG,CAAC,EAAE;MACjB,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAG,CAACb,IAAI,CAACU,IAAI,CAAC;MACxC,IAAI,CAACf,QAAQ,CAACc,QAAQ,CAACf,OAAO,EAAE,MAAM,EAAE,GAAGiB,YAAY,IAAI,CAAC;;IAG9D;IACA,IAAIX,IAAI,CAACc,MAAM,GAAGT,cAAc,EAAE;MAChC,MAAMU,cAAc,GAAGf,IAAI,CAACc,MAAM,GAAGT,cAAc;MACnD,IAAI,CAACV,QAAQ,CAACc,QAAQ,CAACf,OAAO,EAAE,KAAK,EAAE,IAAIqB,cAAc,IAAI,CAAC;;EAElE;EAAC,QAAAC,CAAA,G;qBArCUxB,sBAAsB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,SAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtB7B,sBAAsB;IAAA8B,SAAA;IAAAC,YAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAAtBC,GAAA,CAAA9B,cAAA,EAAgB;QAAA,UAAAqB,EAAA,CAAAU,eAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}