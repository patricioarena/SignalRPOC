{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TooltipAdjustDirective {\n  constructor(element, renderer) {\n    this.element = element;\n    this.renderer = renderer;\n    this.MAX_CARD_WIDTH = '300px';\n    this.MAX_CONTENT_WIDTH = '150px';\n    this.FONT_SIZE = '14px';\n  }\n  ngAfterViewInit() {\n    console.log(\"ENTRO EN NGAFTERVIEWINIT\");\n    if (this.appTooltipAdjust) {\n      this.adjustTooltipPosition();\n      this.adjustCardDimensions();\n    }\n  }\n  onWindowResize() {\n    console.log(\"ONWINDOWRESIZE\");\n    this.adjustTooltipPosition();\n    this.adjustCardDimensions();\n  }\n  adjustTooltipPosition() {\n    const element = this.element.nativeElement;\n    const rect = element.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    // Obtener el ancho del elemento\n    const elementWidth = element.offsetWidth;\n    // Ajustar la posición si la tarjeta se sale del margen derecho\n    if (rect.right > viewportWidth) {\n      const overflowRight = rect.right - viewportWidth;\n      // Ajustar el valor de 'left' para que el borde derecho esté dentro del viewport\n      const newLeft = Math.max(0, rect.left - overflowRight);\n      this.renderer.setStyle(element, 'left', `${newLeft}px`);\n    }\n    // Ajustar la posición si la tarjeta se sale del margen izquierdo\n    if (rect.left < 0) {\n      const overflowLeft = Math.abs(rect.left);\n      // Ajustar el valor de 'left' para que el borde izquierdo esté dentro del viewport\n      const newLeft = Math.min(0, rect.left + overflowLeft);\n      this.renderer.setStyle(element, 'left', `${newLeft}px`);\n    }\n  }\n  adjustCardDimensions() {\n    this.setElementStyle('max-width', this.MAX_CARD_WIDTH);\n    const cardBody = this.element.nativeElement.querySelector('.viewer-card-body');\n    if (cardBody) {\n      this.setElementStyle('max-width', this.MAX_CONTENT_WIDTH, cardBody);\n      const textElements = cardBody.querySelectorAll('*');\n      textElements.forEach(textElement => {\n        this.setElementStyle('max-width', this.MAX_CONTENT_WIDTH, textElement);\n        this.setElementStyle('font-size', this.FONT_SIZE, textElement);\n      });\n    }\n  }\n  setElementStyle(style, value, element = this.element.nativeElement) {\n    this.renderer.setStyle(element, style, value);\n  }\n  static #_ = this.ɵfac = function TooltipAdjustDirective_Factory(t) {\n    return new (t || TooltipAdjustDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TooltipAdjustDirective,\n    selectors: [[\"\", \"appTooltipAdjust\", \"\"]],\n    hostBindings: function TooltipAdjustDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function TooltipAdjustDirective_resize_HostBindingHandler() {\n          return ctx.onWindowResize();\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      appTooltipAdjust: \"appTooltipAdjust\"\n    }\n  });\n}","map":{"version":3,"names":["TooltipAdjustDirective","constructor","element","renderer","MAX_CARD_WIDTH","MAX_CONTENT_WIDTH","FONT_SIZE","ngAfterViewInit","console","log","appTooltipAdjust","adjustTooltipPosition","adjustCardDimensions","onWindowResize","nativeElement","rect","getBoundingClientRect","viewportWidth","window","innerWidth","elementWidth","offsetWidth","right","overflowRight","newLeft","Math","max","left","setStyle","overflowLeft","abs","min","setElementStyle","cardBody","querySelector","textElements","querySelectorAll","forEach","textElement","style","value","_","i0","ɵɵdirectiveInject","ElementRef","Renderer2","_2","selectors","hostBindings","TooltipAdjustDirective_HostBindings","rf","ctx","ɵɵresolveWindow"],"sources":["C:\\Users\\Ayelen\\Desktop\\SignalRPOC\\MockFrontend-1\\src\\app\\directive\\tooltip-adjust.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2, HostListener, Input, AfterViewInit } from '@angular/core';\n\n@Directive({\n  selector: '[appTooltipAdjust]'\n})\nexport class TooltipAdjustDirective implements AfterViewInit{\n  @Input() appTooltipAdjust: boolean;\n\n  private readonly MAX_CARD_WIDTH = '300px';\n  private readonly MAX_CONTENT_WIDTH = '150px';\n  private readonly FONT_SIZE = '14px';\n\n  constructor(private element: ElementRef, private renderer: Renderer2) { }\n\n  ngAfterViewInit(): void {\n    console.log(\"ENTRO EN NGAFTERVIEWINIT\")\n    if(this.appTooltipAdjust){\n      this.adjustTooltipPosition();\n      this.adjustCardDimensions();\n    }\n  }\n\n  @HostListener('window:resize')\n  onWindowResize(){\n    console.log(\"ONWINDOWRESIZE\")\n    this.adjustTooltipPosition();\n    this.adjustCardDimensions();\n  }\n\n  adjustTooltipPosition() {\n    const element = this.element.nativeElement;\n    const rect = element.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n\n    // Obtener el ancho del elemento\n    const elementWidth = element.offsetWidth;\n\n    // Ajustar la posición si la tarjeta se sale del margen derecho\n    if (rect.right > viewportWidth) {\n      const overflowRight = rect.right - viewportWidth;\n      // Ajustar el valor de 'left' para que el borde derecho esté dentro del viewport\n      const newLeft = Math.max(0, rect.left - overflowRight);\n      this.renderer.setStyle(element, 'left', `${newLeft}px`);\n    }\n\n    // Ajustar la posición si la tarjeta se sale del margen izquierdo\n    if (rect.left < 0) {\n      const overflowLeft = Math.abs(rect.left);\n      // Ajustar el valor de 'left' para que el borde izquierdo esté dentro del viewport\n      const newLeft = Math.min(0, rect.left + overflowLeft);\n      this.renderer.setStyle(element, 'left', `${newLeft}px`);\n    }\n  }\n\n  private adjustCardDimensions(): void {\n    this.setElementStyle('max-width', this.MAX_CARD_WIDTH);\n\n    const cardBody = this.element.nativeElement.querySelector('.viewer-card-body');\n    if (cardBody) {\n      this.setElementStyle('max-width', this.MAX_CONTENT_WIDTH, cardBody);\n\n      const textElements = cardBody.querySelectorAll('*');\n      textElements.forEach((textElement: HTMLElement) => {\n        this.setElementStyle('max-width', this.MAX_CONTENT_WIDTH, textElement);\n        this.setElementStyle('font-size', this.FONT_SIZE, textElement);\n      });\n    }\n  }\n\n  private setElementStyle(style: string, value: string, element: HTMLElement = this.element.nativeElement): void {\n    this.renderer.setStyle(element, style, value);\n  }\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}