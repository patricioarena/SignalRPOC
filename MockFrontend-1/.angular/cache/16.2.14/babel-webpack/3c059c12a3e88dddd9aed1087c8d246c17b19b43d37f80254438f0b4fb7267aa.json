{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TooltipAdjustDirective {\n  constructor(element, renderer) {\n    this.element = element;\n    this.renderer = renderer;\n    this.MIN_CARD_WIDTH = '200px';\n    this.MAX_CARD_WIDTH = '300px';\n    this.MAX_CONTENT_WIDTH = '150px';\n    this.FONT_SIZE = '14px';\n  }\n  ngAfterViewInit() {\n    console.log(\"ENTRO EN NGAFTERVIEWINIT\");\n    if (this.appTooltipAdjust) {\n      this.adjustTooltipPosition();\n      this.adjustCardDimensions();\n    }\n  }\n  // @HostListener('window:resize')\n  // onWindowResize(){\n  //   console.log(\"ONWINDOWRESIZE\")\n  //   this.adjustTooltipPosition();\n  //   this.adjustCardDimensions();\n  // }\n  onMouseEnter() {\n    this.adjustTooltipPosition();\n  }\n  onMouseLeave() {\n    this.adjustTooltipPosition();\n  }\n  adjustTooltipPosition() {\n    // const element = this.element.nativeElement;\n    // const tooltip = this.renderer.selectRootElement('.viewer-card-tooltip-container', true);\n    // if (!tooltip) return;\n    // const rect = element.getBoundingClientRect();\n    // const tooltipRect = tooltip.getBoundingClientRect();\n    // // const viewportWidth = window.innerWidth;\n    // // Obtener el contenedor padre para calcular la posición relativa\n    // const parentElement = element.parentElement;\n    // const parentRect = parentElement ? parentElement.getBoundingClientRect() : { left: 0, right: window.innerWidth };\n    // // Obtener el ancho y alto del elemento\n    // const elementWidth = element.offsetWidth;\n    // const elementHeight = element.offsetHeight;\n    // // Calcular la posición del tooltip en relación con el contenedor padre\n    // const offsetLeft = rect.left - parentRect.left;\n    // const offsetTop = rect.top - parentRect.top;\n    // // // Ajustar la posición si la tarjeta se sale del margen derecho\n    // // if (rect.right > viewportWidth) {\n    // //   const overflowRight = rect.right - viewportWidth;\n    // //   const newLeft = Math.max(-100, offsetLeft - overflowRight);\n    // //   this.setElementStyle('left', `${newLeft}px`);\n    // // }\n    // // // Ajustar la posición si la tarjeta se sale del margen izquierdo\n    // // if (rect.left < 0) {\n    // //   const overflowLeft = Math.abs(rect.left);\n    // //   const newLeft = Math.max(20, offsetLeft + overflowLeft);\n    // //   this.setElementStyle('left', `${newLeft}px`);\n    // // }\n    // // Ajustar la posición si la tarjeta se sale del margen derecho del contenedor padre\n    // if (rect.right > parentRect.right) {\n    //   const overflowRight = rect.right - parentRect.right;\n    //   const newLeft = Math.max(-100, offsetLeft - overflowRight);\n    //   // this.setElementStyle('left', `${newLeft}px`);\n    //   this.renderer.setStyle(tooltip, 'left', `${newLeft}px`);\n    // } else {\n    //   this.renderer.setStyle(tooltip, 'left', `${offsetLeft}px`)\n    // }\n    // // Ajustar la posición si la tarjeta se sale del margen izquierdo del contenedor padre\n    // if (rect.left < parentRect.left) {\n    //   const overflowLeft = parentRect.left - rect.left;\n    //   const newLeft = Math.max(20, offsetLeft + overflowLeft);\n    //   // this.setElementStyle('left', `${newLeft}px`);\n    //   this.renderer.setStyle(tooltip, 'left', `${newLeft}px`);\n    // }  else {\n    //   this.renderer.setStyle(tooltip, 'left', `${offsetLeft}px`);\n    // }\n    // // Ajustar la posición vertical para que el tooltip se muestre debajo del elemento\n    // const newTop = offsetTop + elementHeight + 0; // 10px de margen superior\n    // this.setElementStyle('top', `${newTop}px`);\n    const element = this.element.nativeElement;\n    const tooltip = this.renderer.selectRootElement('.viewer-card-tooltip-container', true);\n    if (!tooltip) return;\n    const rect = element.getBoundingClientRect();\n    const tooltipRect = tooltip.getBoundingClientRect();\n    const parentElement = element.parentElement;\n    const parentRect = parentElement ? parentElement.getBoundingClientRect() : {\n      left: 0,\n      right: window.innerWidth\n    };\n    // Calcular la posición horizontal para centrar el tooltip respecto al elemento\n    const offsetLeft = rect.left - parentRect.left + rect.width / 2 - tooltipRect.width / 2;\n    // Ajustar la posición horizontal si la tarjeta se sale del margen derecho del contenedor padre\n    let adjustedLeft = offsetLeft;\n    if (rect.left + rect.width / 2 + tooltipRect.width / 2 > parentRect.right) {\n      adjustedLeft = parentRect.right - tooltipRect.width - parentRect.left;\n    }\n    // Ajustar la posición horizontal si la tarjeta se sale del margen izquierdo del contenedor padre\n    if (rect.left - tooltipRect.width / 2 < parentRect.left) {\n      adjustedLeft = 0;\n    }\n    // Calcular la posición vertical para colocar el tooltip justo debajo del elemento\n    const offsetTop = rect.bottom - parentRect.top + 4; // 4px de margen\n    // Aplicar estilos calculados al tooltip\n    this.renderer.setStyle(tooltip, 'left', `${adjustedLeft}px`);\n    this.renderer.setStyle(tooltip, 'top', `${offsetTop}px`);\n  }\n  adjustCardDimensions() {\n    this.setElementStyle('max-width', this.MAX_CARD_WIDTH);\n    this.setElementStyle('min-width', this.MIN_CARD_WIDTH);\n    const cardBody = this.element.nativeElement.querySelector('.viewer-card-body');\n    if (cardBody) {\n      this.setElementStyle('max-width', this.MAX_CONTENT_WIDTH, cardBody);\n      const textElements = cardBody.querySelectorAll('*');\n      textElements.forEach(textElement => {\n        this.setElementStyle('max-width', this.MAX_CONTENT_WIDTH, textElement);\n        this.setElementStyle('font-size', this.FONT_SIZE, textElement);\n      });\n    }\n  }\n  setElementStyle(style, value, element = this.element.nativeElement) {\n    this.renderer.setStyle(element, style, value);\n  }\n  static #_ = this.ɵfac = function TooltipAdjustDirective_Factory(t) {\n    return new (t || TooltipAdjustDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TooltipAdjustDirective,\n    selectors: [[\"\", \"appTooltipAdjust\", \"\"]],\n    hostBindings: function TooltipAdjustDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseenter\", function TooltipAdjustDirective_mouseenter_HostBindingHandler() {\n          return ctx.onMouseEnter();\n        })(\"mouseleave\", function TooltipAdjustDirective_mouseleave_HostBindingHandler() {\n          return ctx.onMouseLeave();\n        });\n      }\n    },\n    inputs: {\n      appTooltipAdjust: \"appTooltipAdjust\"\n    }\n  });\n}","map":{"version":3,"names":["TooltipAdjustDirective","constructor","element","renderer","MIN_CARD_WIDTH","MAX_CARD_WIDTH","MAX_CONTENT_WIDTH","FONT_SIZE","ngAfterViewInit","console","log","appTooltipAdjust","adjustTooltipPosition","adjustCardDimensions","onMouseEnter","onMouseLeave","nativeElement","tooltip","selectRootElement","rect","getBoundingClientRect","tooltipRect","parentElement","parentRect","left","right","window","innerWidth","offsetLeft","width","adjustedLeft","offsetTop","bottom","top","setStyle","setElementStyle","cardBody","querySelector","textElements","querySelectorAll","forEach","textElement","style","value","_","i0","ɵɵdirectiveInject","ElementRef","Renderer2","_2","selectors","hostBindings","TooltipAdjustDirective_HostBindings","rf","ctx","TooltipAdjustDirective_mouseleave_HostBindingHandler"],"sources":["C:\\Users\\Ayelen\\Desktop\\SignalRPOC\\MockFrontend-1\\src\\app\\directive\\tooltip-adjust.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2, HostListener, Input, AfterViewInit } from '@angular/core';\n\n@Directive({\n  selector: '[appTooltipAdjust]'\n})\nexport class TooltipAdjustDirective implements AfterViewInit{\n  @Input() appTooltipAdjust: boolean;\n\n  private readonly MIN_CARD_WIDTH = '200px';\n  private readonly MAX_CARD_WIDTH = '300px';\n  private readonly MAX_CONTENT_WIDTH = '150px';\n  private readonly FONT_SIZE = '14px';\n\n  constructor(private element: ElementRef, private renderer: Renderer2) { }\n\n  ngAfterViewInit(): void {\n    console.log(\"ENTRO EN NGAFTERVIEWINIT\")\n    if(this.appTooltipAdjust){\n      this.adjustTooltipPosition();\n      this.adjustCardDimensions();\n    }\n  }\n\n  // @HostListener('window:resize')\n  // onWindowResize(){\n  //   console.log(\"ONWINDOWRESIZE\")\n  //   this.adjustTooltipPosition();\n  //   this.adjustCardDimensions();\n  // }\n  @HostListener('mouseenter') onMouseEnter() {\n    this.adjustTooltipPosition();\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.adjustTooltipPosition();\n  }\n\n  adjustTooltipPosition() {\n    // const element = this.element.nativeElement;\n    // const tooltip = this.renderer.selectRootElement('.viewer-card-tooltip-container', true);\n    // if (!tooltip) return;\n\n    // const rect = element.getBoundingClientRect();\n    // const tooltipRect = tooltip.getBoundingClientRect();\n    // // const viewportWidth = window.innerWidth;\n\n    // // Obtener el contenedor padre para calcular la posición relativa\n    // const parentElement = element.parentElement;\n    // const parentRect = parentElement ? parentElement.getBoundingClientRect() : { left: 0, right: window.innerWidth };\n\n    // // Obtener el ancho y alto del elemento\n    // const elementWidth = element.offsetWidth;\n    // const elementHeight = element.offsetHeight;\n\n    // // Calcular la posición del tooltip en relación con el contenedor padre\n    // const offsetLeft = rect.left - parentRect.left;\n    // const offsetTop = rect.top - parentRect.top;\n\n    // // // Ajustar la posición si la tarjeta se sale del margen derecho\n    // // if (rect.right > viewportWidth) {\n    // //   const overflowRight = rect.right - viewportWidth;\n    // //   const newLeft = Math.max(-100, offsetLeft - overflowRight);\n    // //   this.setElementStyle('left', `${newLeft}px`);\n    // // }\n\n    // // // Ajustar la posición si la tarjeta se sale del margen izquierdo\n    // // if (rect.left < 0) {\n    // //   const overflowLeft = Math.abs(rect.left);\n    // //   const newLeft = Math.max(20, offsetLeft + overflowLeft);\n    // //   this.setElementStyle('left', `${newLeft}px`);\n    // // }\n\n    // // Ajustar la posición si la tarjeta se sale del margen derecho del contenedor padre\n    // if (rect.right > parentRect.right) {\n    //   const overflowRight = rect.right - parentRect.right;\n    //   const newLeft = Math.max(-100, offsetLeft - overflowRight);\n    //   // this.setElementStyle('left', `${newLeft}px`);\n    //   this.renderer.setStyle(tooltip, 'left', `${newLeft}px`);\n    // } else {\n    //   this.renderer.setStyle(tooltip, 'left', `${offsetLeft}px`)\n    // }\n\n    // // Ajustar la posición si la tarjeta se sale del margen izquierdo del contenedor padre\n    // if (rect.left < parentRect.left) {\n    //   const overflowLeft = parentRect.left - rect.left;\n    //   const newLeft = Math.max(20, offsetLeft + overflowLeft);\n    //   // this.setElementStyle('left', `${newLeft}px`);\n    //   this.renderer.setStyle(tooltip, 'left', `${newLeft}px`);\n    // }  else {\n    //   this.renderer.setStyle(tooltip, 'left', `${offsetLeft}px`);\n    // }\n\n    // // Ajustar la posición vertical para que el tooltip se muestre debajo del elemento\n    // const newTop = offsetTop + elementHeight + 0; // 10px de margen superior\n    // this.setElementStyle('top', `${newTop}px`);\n\n    const element = this.element.nativeElement;\n    const tooltip = this.renderer.selectRootElement('.viewer-card-tooltip-container', true);\n    if (!tooltip) return;\n\n    const rect = element.getBoundingClientRect();\n    const tooltipRect = tooltip.getBoundingClientRect();\n    const parentElement = element.parentElement;\n    const parentRect = parentElement ? parentElement.getBoundingClientRect() : { left: 0, right: window.innerWidth };\n\n    // Calcular la posición horizontal para centrar el tooltip respecto al elemento\n    const offsetLeft = rect.left - parentRect.left + (rect.width / 2) - (tooltipRect.width / 2);\n\n    // Ajustar la posición horizontal si la tarjeta se sale del margen derecho del contenedor padre\n    let adjustedLeft = offsetLeft;\n    if (rect.left + (rect.width / 2) + (tooltipRect.width / 2) > parentRect.right) {\n      adjustedLeft = parentRect.right - tooltipRect.width - parentRect.left;\n    }\n    // Ajustar la posición horizontal si la tarjeta se sale del margen izquierdo del contenedor padre\n    if (rect.left - (tooltipRect.width / 2) < parentRect.left) {\n      adjustedLeft = 0;\n    }\n\n    // Calcular la posición vertical para colocar el tooltip justo debajo del elemento\n    const offsetTop = rect.bottom - parentRect.top + 4; // 4px de margen\n\n    // Aplicar estilos calculados al tooltip\n    this.renderer.setStyle(tooltip, 'left', `${adjustedLeft}px`);\n    this.renderer.setStyle(tooltip, 'top', `${offsetTop}px`);\n  }\n\n  private adjustCardDimensions(): void {\n    this.setElementStyle('max-width', this.MAX_CARD_WIDTH);\n    this.setElementStyle('min-width', this.MIN_CARD_WIDTH);\n\n    const cardBody = this.element.nativeElement.querySelector('.viewer-card-body');\n    if (cardBody) {\n      this.setElementStyle('max-width', this.MAX_CONTENT_WIDTH, cardBody);\n\n      const textElements = cardBody.querySelectorAll('*');\n      textElements.forEach((textElement: HTMLElement) => {\n        this.setElementStyle('max-width', this.MAX_CONTENT_WIDTH, textElement);\n        this.setElementStyle('font-size', this.FONT_SIZE, textElement);\n      });\n    }\n  }\n\n  private setElementStyle(style: string, value: string, element: HTMLElement = this.element.nativeElement): void {\n    this.renderer.setStyle(element, style, value);\n  }\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}